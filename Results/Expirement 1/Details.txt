Aim to show our model bootstraps quicker than Bitcoin

Expirement 1 (Time taken to find all nodes )

Taking various network sizes to determine how long it takes to find all nodes on the network and then to query every node to see if alive or dead

            Variables:
                      Network size (Total nodes)
                      Number of simulationous connections
                      Number of nodes offline (demo a ddos?)
                      Latency / delay / time take for a repsonse to happen (Increase min repsonse time for example)
                      Timeout

                      node_live_probability  #Likelyhood the node will be up
                      query_connection_timeout  # Timeout when checking a node is alive (milliseconds)
                      min_node_respsonse_time_getAddr # quickest repsonse time seen during collection of data
                      max_node_respsonse_time_getAddr  #Max amount of time before timeout
                      client_connections # Max number of connections to live clients
                      network_ip_node_size # Number of IP addresses / nodes that have been seen on the network in the past 2 weeks
                      average_getAdrr_no_node_response #Number or nodes typically sent when a node requests a getAddr message

          Changing variables such as the number of nodes recieved from a getAddr message for each network size
          Change the percentage of online / offline nodes
          Change network latency times
          Calculate the amount of resources saved in our model (time, bandwidth, CPU etc)
          Number of nodes needed to query to find all nodes (Varables such as number of nodes recieved, network size etc for this)
          How many nodes needed to be contacted to find every node on the network (Do for different node sizes, etc)

          Demo a ddos attack - an attacker who takes down 99% of the network, how does that impact bootstrap time, resources wasted ? (What wasted resources? -)

        HOW TO SHOW THE RESULTS !!!??? - WHAT KIND OF GRAPHS etc


        GRAPH 1 - COMPARISION OF GET ADDR RESPONSES FOR DIFFERENT CONNECTION AMOUNTS ON THE SAME NETWORK SIZE
                  X AXIS - NUMBER OF CONNECTIONS, Y AXIS TIME (PROB SWAP THESE) = THEN 2 LINE GRAPHS (DIFFERENT COLOURS) SHOWING THE DIFFERENCES IN TIME
                  Repeat for all network sizes


        SUB EXPIREMENTS (WHAT TO ACTUALLY MEASURE)
                  Measure how network sizes (default settings) effect bootstrap time - Very important (FUTURE network sizes !)
                      Graph - For different network sizes how long did it take to query all live nodes (Default values)
                      Graph - For different network sizes how long did it take to query all live nodes (Different percentage of nodes online / offline) (DDOS attack demo)
                      Graph - For different network sizes how long did it take to query all live nodes (Different number of simulationous connections)
                      Graph - For different network sizes how long did it take to query all live nodes (Different connection reponse times)

                      Repeat above graphs to see how long it takes to find all the nodes on the network (How many nodes queried to get a list containing every node)

              ** Calculate resources saved in our model **

Repeat experiments 100 times ?
##Number of connections   Avg. size Node list recieved    Number of nodes queried to find all nodes    Time taken to find all nodes             Time take to test all nodes if online               Number of nodes online             Number of nodes offline
TODO - Results to collect - Standard model (Bitcoin but for various network sizes)
        Default values - different network size (Log how long to query all live nodes / find the whole node list)
                          Network sizes - 100, 1000, 5000, 10,000, 100,000, 1,000,000, 10,000,000

Expirement 2 (Time taken to download the blockchain)
